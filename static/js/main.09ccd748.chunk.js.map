{"version":3,"sources":["redux/types/search.js","redux/types/evolution.js","redux/types/trigger.js","redux/types/index.js","redux/reducers/search.js","redux/reducers/evolution.js","redux/reducers/trigger.js","redux/reducers/index.js","redux/actions/search.js","redux/sagas/search.js","redux/actions/evolution.js","redux/sagas/evolution.js","redux/actions/trigger.js","redux/sagas/trigger.js","redux/sagas/index.js","redux/store/index.js","components/search/results.js","components/search/history.js","components/content/index.js","components/search/index.js","components/evolution/index.js","components/Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RESQUEST","SUCCESS","FAILURE","SEARCH","EVOLUTION","TRIGGER","initialState","isLoading","searchTerm","searchResult","history","search","state","action","type","TYPES","searchHistory","push","payload","chain","pokemonEvolution","trigger","pokemonEvolutionTrigger","rootReducer","combineReducers","getSearchedPokemon","a","response","fetch","toLowerCase","then","res","ok","json","Error","catch","error","console","log","pokemonResponse","pokemonId","id","Promise","all","pokemonIdentifications","abilities","color","genders","name","locations","moves","types","varieties","warn","searchPokemon","searchPokemonSaga","call","data","put","takeLatest","getPokemonEvolution","species","pokemonEvolutionSaga","getPokemonEvolutionTrigger","pokemonEvolutionTriggerSaga","rootSagas","sagaMiddlewear","createSagaMiddlewear","store","createStore","rootReducers","applyMiddleware","run","SearchResults","props","pokedex","useState","value","links","className","map","item","index","Fragment","key","href","length","src","alt","ability","move","pokemon","to","style","textDecoration","History","connect","dispatch","setSearchTerm","htmlFor","aria-label","placeholder","title","onChange","e","target","required","aria-hidden","onClick","evolutionChainTrigger","evolutionChainSpecies","match","params","isChain","useEffect","justifyContent","paddingBottom","Layout","children","App","path","component","Search","exact","PokemonEvolution","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.09ccd748.chunk.js","sourcesContent":["module.exports = {\r\n  RESQUEST: \"SEARCH_RESQUEST\",\r\n  SUCCESS: \"SEARCH_SUCCESS\",\r\n  FAILURE: \"SEARCH_FAILURE\",\r\n};\r\n","module.exports = {\r\n  RESQUEST: \"EVOLUTION_RESQUEST\",\r\n  SUCCESS: \"EVOLUTION_SUCCESS\",\r\n  FAILURE: \"EVOLUTION_FAILURE\",\r\n};\r\n","module.exports = {\r\n  RESQUEST: \"TRIGGER_RESQUEST\",\r\n  SUCCESS: \"TRIGGER_SUCCESS\",\r\n  FAILURE: \"TRIGGER_FAILURE\",\r\n};\r\n","import SEARCH from \"./search\";\r\nimport EVOLUTION from \"./evolution\";\r\nimport TRIGGER from \"./trigger\";\r\n\r\nexport default {SEARCH, EVOLUTION, TRIGGER};\r\n","import TYPES from \"../types\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  searchTerm: \"\",\r\n  searchResult: null,\r\n  history: [],\r\n};\r\n\r\nconst search = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.SEARCH.RESQUEST:\r\n      let searchHistory = [...state.history];\r\n      searchHistory.push(action.searchTerm);\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        searchTerm: action.searchTerm,\r\n        history: searchHistory,\r\n      };\r\n    case TYPES.SEARCH.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        searchResult: action.payload,\r\n      };\r\n    case TYPES.SEARCH.FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        searchResult: \"NoResult\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default search;\r\n","import TYPES from \"../types\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  chain: {},\r\n};\r\n\r\nconst pokemonEvolution = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.EVOLUTION.RESQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case TYPES.EVOLUTION.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        chain: action.payload,\r\n      };\r\n    case TYPES.EVOLUTION.FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        chain: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pokemonEvolution;\r\n","import TYPES from \"../types\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  trigger: \"\",\r\n};\r\n\r\nconst pokemonEvolutionTrigger = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.TRIGGER.RESQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case TYPES.TRIGGER.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        trigger: action.payload,\r\n      };\r\n    case TYPES.TRIGGER.FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        trigger: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pokemonEvolutionTrigger;\r\n","import {combineReducers} from \"redux\";\nimport search from \"./search\";\nimport pokemonEvolution from \"./evolution\";\nimport pokemonEvolutionTrigger from \"./trigger\";\n\nconst rootReducer = combineReducers({\n  search,\n  pokemonEvolution,\n  pokemonEvolutionTrigger,\n});\n\nexport default rootReducer;\n","export default async function getSearchedPokemon(searchTerm) {\r\n  try {\r\n    let response = fetch(\r\n      `https://pokeapi.co/api/v2/pokemon/${searchTerm.toLowerCase()}`\r\n    )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw new Error(\"not found\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n    const pokemonResponse = await response;\r\n    const pokemonId = pokemonResponse.id;\r\n\r\n    const pokemonIdentifications = await Promise.all([\r\n      fetch(`https://pokeapi.co/api/v2/gender/${pokemonId}`).then(res =>\r\n        res.json()\r\n      ),\r\n      fetch(`https://pokeapi.co/api/v2/location/${pokemonId}`).then(res =>\r\n        res.json()\r\n      ),\r\n      fetch(\r\n        `https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`\r\n      ).then(res => res.json()),\r\n    ]);\r\n\r\n    return {\r\n      payload: {\r\n        pokemonId,\r\n        abilities: pokemonResponse.abilities,\r\n        color: pokemonIdentifications[2].color,\r\n        genders: pokemonIdentifications[0].name,\r\n        locations: pokemonIdentifications[1].name,\r\n        moves: pokemonResponse.moves,\r\n        types: pokemonResponse.types,\r\n        varieties: pokemonIdentifications[2].varieties,\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.warn(\"error\");\r\n    return {\r\n      payload: null,\r\n    };\r\n  }\r\n}\r\n\r\n// Promise.all([\r\n//             fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`),\r\n//             fetch(`https://pokeapi.co/api/v2/gender/${pokemonId}`)\r\n//         ])\r\n","import {put, takeLatest, call} from \"redux-saga/effects\";\r\nimport getSearchedPokemon from \"../actions/search\";\r\nimport TYPES from \"../types/index\";\r\n\r\nfunction* searchPokemon(action) {\r\n  try {\r\n    const data = yield call(getSearchedPokemon, action.searchTerm);\r\n    if (!data.payload) {\r\n      throw new Error(\"No data found\");\r\n    }\r\n    yield put({\r\n      type: TYPES.SEARCH.SUCCESS,\r\n      payload: data.payload,\r\n    });\r\n  } catch (error) {\r\n    yield put({type: TYPES.SEARCH.FAILURE});\r\n  }\r\n}\r\n\r\nexport default function* searchPokemonSaga() {\r\n  yield takeLatest(TYPES.SEARCH.RESQUEST, searchPokemon);\r\n}\r\n","export default async function getPokemonEvolution(pokemonId) {\r\n  try {\r\n    let response = fetch(\r\n      `https://pokeapi.co/api/v2/evolution-chain/${pokemonId}`\r\n    )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw new Error(\"not found\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    const res = await response;\r\n\r\n    return {\r\n      payload: res.chain.species,\r\n    };\r\n  } catch (error) {\r\n    console.warn(\"error\");\r\n    return {\r\n      payload: null,\r\n    };\r\n  }\r\n}\r\n","import {put, takeLatest, call} from \"redux-saga/effects\";\r\nimport getPokemonEvolution from \"../actions/evolution\";\r\nimport TYPES from \"../types/index\";\r\n\r\nfunction* pokemonEvolution(action) {\r\n  try {\r\n    const data = yield call(getPokemonEvolution, action.pokemonId);\r\n    if (!data.payload) {\r\n      throw new Error(\"No data found\");\r\n    }\r\n    yield put({\r\n      type: TYPES.EVOLUTION.SUCCESS,\r\n      payload: data.payload,\r\n    });\r\n  } catch (error) {\r\n    yield put({type: TYPES.EVOLUTION.FAILURE});\r\n  }\r\n}\r\n\r\nexport default function* pokemonEvolutionSaga() {\r\n  yield takeLatest(TYPES.EVOLUTION.RESQUEST, pokemonEvolution);\r\n}\r\n","export default async function getPokemonEvolutionTrigger(pokemonId) {\r\n  try {\r\n    let response = fetch(\r\n      `https://pokeapi.co/api/v2/evolution-trigger/${pokemonId}`\r\n    )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw new Error(\"not found\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    const res = await response;\r\n    return {\r\n      payload: res.name,\r\n    };\r\n  } catch (error) {\r\n    console.warn(\"error\");\r\n    return {\r\n      payload: null,\r\n    };\r\n  }\r\n}\r\n","import {put, takeLatest, call} from \"redux-saga/effects\";\r\nimport getPokemonEvolutionTrigger from \"../actions/trigger\";\r\nimport TYPES from \"../types/index\";\r\n\r\nfunction* pokemonEvolutionTrigger(action) {\r\n  try {\r\n    const data = yield call(getPokemonEvolutionTrigger, action.pokemonId);\r\n\r\n    if (!data.payload) {\r\n      throw new Error(\"No data found\");\r\n    }\r\n    yield put({\r\n      type: TYPES.TRIGGER.SUCCESS,\r\n      payload: data.payload,\r\n    });\r\n  } catch (error) {\r\n    yield put({type: TYPES.TRIGGER.FAILURE});\r\n  }\r\n}\r\n\r\nexport default function* pokemonEvolutionTriggerSaga() {\r\n  yield takeLatest(TYPES.TRIGGER.RESQUEST, pokemonEvolutionTrigger);\r\n}\r\n","import {all} from \"redux-saga/effects\";\nimport searchPokemonSaga from \"./search\";\nimport pokemonEvolutionSaga from \"./evolution\";\nimport pokemonEvolutionTriggerSaga from \"./trigger\";\n\nexport default function* rootSagas() {\n  yield all([\n    searchPokemonSaga(),\n    pokemonEvolutionSaga(),\n    pokemonEvolutionTriggerSaga(),\n  ]);\n}\n","import {createStore, applyMiddleware} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport createSagaMiddlewear from \"redux-saga\";\nimport rootReducers from \"../reducers\";\nimport rootSagas from \"../sagas\";\n\nconst sagaMiddlewear = createSagaMiddlewear();\n\nexport const store = createStore(\n  rootReducers,\n  process.env.NODE_ENV === \"production\"\n    ? applyMiddleware(sagaMiddlewear)\n    : composeWithDevTools(applyMiddleware(sagaMiddlewear))\n);\n\nsagaMiddlewear.run(rootSagas);\n","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst SearchResults = props => {\r\n  const {pokedex, searchTerm} = props;\r\n  const [links] = useState([\r\n    {\r\n      value: \"Abilities\",\r\n      links: \"#abilities\",\r\n    },\r\n    {\r\n      value: \"Colors\",\r\n      links: \"#color\",\r\n    },\r\n    {\r\n      value: \"Gender\",\r\n      links: \"#gender\",\r\n    },\r\n    {\r\n      value: \"Location\",\r\n      links: \"#location\",\r\n    },\r\n    {\r\n      value: \"moves\",\r\n      links: \"#moves\",\r\n    },\r\n    {\r\n      value: \"types\",\r\n      links: \"#types\",\r\n    },\r\n    {\r\n      value: \"varieties\",\r\n      links: \"#varieties\",\r\n    },\r\n  ]);\r\n  return (\r\n    <>\r\n      <div className=\"sc-title\">\r\n        <h5 className=\"findHeader\">\r\n          Results for <span className=\"findSearchTerm\">\"{searchTerm}\"</span>\r\n        </h5>\r\n        <div id=\"findSubHeader\">\r\n          <span id=\"findSubHeaderLabel\">Jump to:</span>\r\n          {links.map((item, index) => (\r\n            <React.Fragment key={index}>\r\n              <a href={item.links}>{item.value}</a>\r\n              {links.length - 1 !== index && <span className=\"ghost\">|</span>}\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"search-content\">\r\n        <div className=\"search-card\">\r\n          <div className=\"search-img\">\r\n            <img src=\"images/pokemon.jpg\" alt=\"\" />\r\n          </div>\r\n          {pokedex.abilities && (\r\n            <div id=\"abilities\" className=\"sc-about\">\r\n              <h3>Abilities</h3>\r\n              <p>\r\n                {pokedex.abilities.map((item, index) => (\r\n                  <React.Fragment key={index}>\r\n                    {item.ability.name}\r\n                    {\", \"}\r\n                  </React.Fragment>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {pokedex.color && (\r\n            <div id=\"color\" className=\"sc-about\">\r\n              <h3>color</h3>\r\n              <p>{pokedex.color.name}</p>\r\n            </div>\r\n          )}\r\n          {pokedex.genders && (\r\n            <div id=\"gender\" className=\"sc-about\">\r\n              <h3>Gender</h3>\r\n              <p>{pokedex.genders}</p>\r\n            </div>\r\n          )}\r\n          {pokedex.locations && (\r\n            <div id=\"location\" className=\"sc-about\">\r\n              <h3>Location</h3>\r\n              <p>{pokedex.locations}</p>\r\n            </div>\r\n          )}\r\n          {pokedex.moves && (\r\n            <div id=\"moves\" className=\"sc-about\">\r\n              <h3>Moves</h3>\r\n              <p>\r\n                {pokedex.moves.map((item, index) => (\r\n                  <React.Fragment key={index}>\r\n                    {item.move.name}\r\n                    {\", \"}\r\n                  </React.Fragment>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {pokedex.types && (\r\n            <div id=\"types\" className=\"sc-about\">\r\n              <h3>Types</h3>\r\n              <p>\r\n                {pokedex.types.map((item, index) => (\r\n                  <React.Fragment key={index}>\r\n                    {item.type.name}\r\n                    {\", \"}\r\n                  </React.Fragment>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {pokedex.varieties && (\r\n            <div id=\"varieties\" className=\"sc-about\">\r\n              <h3>Varieties</h3>\r\n              <p>\r\n                {pokedex.varieties.map((item, index) => (\r\n                  <React.Fragment key={index}>\r\n                    {item.pokemon.name}\r\n                    {\", \"}\r\n                  </React.Fragment>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {pokedex.pokemonId && (\r\n            <div id=\"chain\" className=\"sc-about\">\r\n              <h3>Evolution Chain</h3>\r\n              <Link\r\n                to={`/evolution_chains/${pokedex.pokemonId}/true`}\r\n                style={{color: \"white\", textDecoration: \"underline\"}}\r\n              >\r\n                Click Here\r\n              </Link>\r\n            </div>\r\n          )}\r\n          {pokedex.pokemonId && (\r\n            <div id=\"trigger\" className=\"sc-about\">\r\n              <h3>Evolution Trigger</h3>\r\n              <Link\r\n                to={`/evolution_triggers/${pokedex.pokemonId}`}\r\n                style={{color: \"white\", textDecoration: \"underline\"}}\r\n              >\r\n                Click Here\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\n\r\nconst History = props => {\r\n  const {data} = props;\r\n  return (\r\n    <>\r\n      <div className=\"history-box\">\r\n        <h3>History</h3>\r\n        <ul>\r\n          {data.map((item, index) => (\r\n            <li key={index}>{item}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport SearchResults from \"../search/results\";\r\nimport History from \"../search/history\";\r\n\r\nconst BodyContent = props => {\r\n  const {searchResult, searchHistory, searchTerm} = props;\r\n  return (\r\n    (searchResult || (searchHistory && searchHistory.length > 0)) && (\r\n      <div className=\"content\">\r\n        <div className=\"search-content-wrap\">\r\n          {searchResult &&\r\n            (searchResult === \"NoResult\" ? (\r\n              <div className=\"search-content\">\r\n                <div className=\"search-card\">\r\n                  <h5>Result Not Found</h5>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <SearchResults\r\n                pokedex={searchResult}\r\n                history={searchHistory}\r\n                searchTerm={searchTerm}\r\n              />\r\n            ))}\r\n          {searchHistory && searchHistory.length > 0 && (\r\n            <History data={searchHistory} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchTerm: state.search.searchTerm,\r\n  searchResult: state.search.searchResult,\r\n  isLoading: state.search.isLoading,\r\n  searchHistory: state.search.history,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(BodyContent);\r\n","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport TYPES from \"../../redux/types\";\r\nimport BodyContent from \"../content\";\r\n\r\nconst Search = props => {\r\n  const {searchPokemon} = props;\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const handleClick = e => {\r\n    if (searchTerm.length > 3) {\r\n      searchPokemon(searchTerm);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"header-container\">\r\n          <nav className=\"header-nav\">\r\n            <div className=\"search-modal\">\r\n              <div className=\"form-group\">\r\n                <label id=\"term-label\" htmlFor=\"term\" className=\"form-label\">\r\n                  <input\r\n                    name=\"term\"\r\n                    id=\"term\"\r\n                    className=\"\"\r\n                    type=\"search\"\r\n                    aria-label=\"Search\"\r\n                    placeholder=\"Enter Pokemon Name\"\r\n                    title=\"Enter Pokemon Name\"\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                  <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                </label>\r\n              </div>\r\n              <input\r\n                type=\"button\"\r\n                className=\"btn-search\"\r\n                value=\"Search\"\r\n                onClick={handleClick}\r\n              />\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      <BodyContent />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchResult: state.search.searchResult,\r\n  isLoading: state.search.isLoading,\r\n  searchHistory: state.search.history,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchPokemon: data =>\r\n    dispatch({type: TYPES.SEARCH.RESQUEST, searchTerm: data}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport TYPES from \"../../redux/types\";\r\n\r\nconst PokemonEvolution = props => {\r\n  const {\r\n    getPokemonEvolution,\r\n    evolutionChainSpecies,\r\n    getPokemonEvolutionTrigger,\r\n    evolutionChainTrigger,\r\n  } = props;\r\n  const {pokemonId, isChain} = props.match.params;\r\n\r\n  useEffect(() => {\r\n    if (isChain) {\r\n      getPokemonEvolution(pokemonId);\r\n    } else {\r\n      getPokemonEvolutionTrigger(pokemonId);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"container\">\r\n          <nav className=\"header-nav\">\r\n            <div className=\"search-modal\" style={{justifyContent: \"right\"}}>\r\n              <Link to=\"/\" className=\"btn-prev\">\r\n                Back\r\n              </Link>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      <div className=\"content\">\r\n        <div className=\"search-content-wrap\">\r\n          <div className=\"search-content\">\r\n            <div className=\"search-card\">\r\n              <h2 style={{paddingBottom: \"20px\", color: \"white\"}}>\r\n                {isChain ? \"Evolution Chain\" : \"Evolution Trigger\"}\r\n              </h2>\r\n              {isChain && (\r\n                <div className=\"sc-about\">\r\n                  <p>\r\n                    <span>Specie Name: </span>\r\n                    {evolutionChainSpecies.chain.name}\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {!isChain && (\r\n                <div className=\"sc-about\">\r\n                  {evolutionChainTrigger.trigger && (\r\n                    <p>\r\n                      <span>Trigger Name: </span>\r\n                      {evolutionChainTrigger.trigger}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  evolutionChainTrigger: state.pokemonEvolutionTrigger,\r\n  evolutionChainSpecies: state.pokemonEvolution,\r\n  isLoading: state.pokemonEvolution.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getPokemonEvolution: data =>\r\n    dispatch({type: TYPES.EVOLUTION.RESQUEST, pokemonId: data}),\r\n  getPokemonEvolutionTrigger: data =>\r\n    dispatch({type: TYPES.TRIGGER.RESQUEST, pokemonId: data}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonEvolution);\r\n","import React from \"react\";\r\n\r\nconst Layout = ({children}) => {\r\n  return (\r\n    <>\r\n      <div className=\"page-bg\"></div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport {Provider} from \"react-redux\";\nimport {Switch, Route} from \"react-router-dom\";\n\nimport {store} from \"./redux/store\";\nimport Search from \"./components/search\";\nimport PokemonEvolution from \"./components/evolution\";\nimport Layout from \"./components/Layout\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" component={Search} exact={true} />\n          <Route\n            path=\"/evolution_chains/:pokemonId/:isChain\"\n            component={PokemonEvolution}\n          />\n          <Route\n            path=\"/evolution_triggers/:pokemonId\"\n            component={PokemonEvolution}\n          />\n        </Switch>\n      </Layout>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}